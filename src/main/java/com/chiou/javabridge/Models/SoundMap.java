package com.chiou.javabridge.Models;

import com.chiou.javabridge.JavaBridge;
import net.minecraft.sound.BlockSoundGroup;

import java.util.Map;

public class SoundMap {
    public static BlockSoundGroup ParseItemSound(String sound) {
        BlockSoundGroup result = SOUND_MAP.get(sound);
        if (result == null) {
            JavaBridge.LOGGER.warn("Unknown sound group '{}', falling back to '{}'", sound, BlockSoundGroup.INTENTIONALLY_EMPTY);
            return BlockSoundGroup.INTENTIONALLY_EMPTY;
        }
        return result;
    }

    private static final Map<String, BlockSoundGroup> SOUND_MAP = Map.<String, BlockSoundGroup>ofEntries(
            Map.entry("INTENTIONALLY_EMPTY", BlockSoundGroup.INTENTIONALLY_EMPTY),
            Map.entry("WOOD", BlockSoundGroup.WOOD),
            Map.entry("GRAVEL", BlockSoundGroup.GRAVEL),
            Map.entry("GRASS", BlockSoundGroup.GRASS),
            Map.entry("LILY_PAD", BlockSoundGroup.LILY_PAD),
            Map.entry("STONE", BlockSoundGroup.STONE),
            Map.entry("METAL", BlockSoundGroup.METAL),
            Map.entry("GLASS", BlockSoundGroup.GLASS),
            Map.entry("WOOL", BlockSoundGroup.WOOL),
            Map.entry("SAND", BlockSoundGroup.SAND),
            Map.entry("SNOW", BlockSoundGroup.SNOW),
            Map.entry("POWDER_SNOW", BlockSoundGroup.POWDER_SNOW),
            Map.entry("LADDER", BlockSoundGroup.LADDER),
            Map.entry("ANVIL", BlockSoundGroup.ANVIL),
            Map.entry("SLIME", BlockSoundGroup.SLIME),
            Map.entry("HONEY", BlockSoundGroup.HONEY),
            Map.entry("WET_GRASS", BlockSoundGroup.WET_GRASS),
            Map.entry("CORAL", BlockSoundGroup.CORAL),
            Map.entry("BAMBOO", BlockSoundGroup.BAMBOO),
            Map.entry("BAMBOO_SAPLING", BlockSoundGroup.BAMBOO_SAPLING),
            Map.entry("SCAFFOLDING", BlockSoundGroup.SCAFFOLDING),
            Map.entry("SWEET_BERRY_BUSH", BlockSoundGroup.SWEET_BERRY_BUSH),
            Map.entry("CROP", BlockSoundGroup.CROP),
            Map.entry("STEM", BlockSoundGroup.STEM),
            Map.entry("VINE", BlockSoundGroup.VINE),
            Map.entry("NETHER_WART", BlockSoundGroup.NETHER_WART),
            Map.entry("LANTERN", BlockSoundGroup.LANTERN),
            Map.entry("NETHER_STEM", BlockSoundGroup.NETHER_STEM),
            Map.entry("NYLIUM", BlockSoundGroup.NYLIUM),
            Map.entry("FUNGUS", BlockSoundGroup.FUNGUS),
            Map.entry("ROOTS", BlockSoundGroup.ROOTS),
            Map.entry("SHROOMLIGHT", BlockSoundGroup.SHROOMLIGHT),
            Map.entry("WEEPING_VINES", BlockSoundGroup.WEEPING_VINES),
            Map.entry("WEEPING_VINES_LOW_PITCH", BlockSoundGroup.WEEPING_VINES_LOW_PITCH),
            Map.entry("SOUL_SAND", BlockSoundGroup.SOUL_SAND),
            Map.entry("SOUL_SOIL", BlockSoundGroup.SOUL_SOIL),
            Map.entry("BASALT", BlockSoundGroup.BASALT),
            Map.entry("WART_BLOCK", BlockSoundGroup.WART_BLOCK),
            Map.entry("NETHERRACK", BlockSoundGroup.NETHERRACK),
            Map.entry("NETHER_BRICKS", BlockSoundGroup.NETHER_BRICKS),
            Map.entry("NETHER_SPROUTS", BlockSoundGroup.NETHER_SPROUTS),
            Map.entry("NETHER_ORE", BlockSoundGroup.NETHER_ORE),
            Map.entry("BONE", BlockSoundGroup.BONE),
            Map.entry("NETHERITE", BlockSoundGroup.NETHERITE),
            Map.entry("ANCIENT_DEBRIS", BlockSoundGroup.ANCIENT_DEBRIS),
            Map.entry("LODESTONE", BlockSoundGroup.LODESTONE),
            Map.entry("CHAIN", BlockSoundGroup.CHAIN),
            Map.entry("NETHER_GOLD_ORE", BlockSoundGroup.NETHER_GOLD_ORE),
            Map.entry("GILDED_BLACKSTONE", BlockSoundGroup.GILDED_BLACKSTONE),
            Map.entry("CANDLE", BlockSoundGroup.CANDLE),
            Map.entry("AMETHYST_BLOCK", BlockSoundGroup.AMETHYST_BLOCK),
            Map.entry("AMETHYST_CLUSTER", BlockSoundGroup.AMETHYST_CLUSTER),
            Map.entry("SMALL_AMETHYST_BUD", BlockSoundGroup.SMALL_AMETHYST_BUD),
            Map.entry("MEDIUM_AMETHYST_BUD", BlockSoundGroup.MEDIUM_AMETHYST_BUD),
            Map.entry("LARGE_AMETHYST_BUD", BlockSoundGroup.LARGE_AMETHYST_BUD),
            Map.entry("TUFF", BlockSoundGroup.TUFF),
            Map.entry("TUFF_BRICKS", BlockSoundGroup.TUFF_BRICKS),
            Map.entry("POLISHED_TUFF", BlockSoundGroup.POLISHED_TUFF),
            Map.entry("CALCITE", BlockSoundGroup.CALCITE),
            Map.entry("DRIPSTONE_BLOCK", BlockSoundGroup.DRIPSTONE_BLOCK),
            Map.entry("POINTED_DRIPSTONE", BlockSoundGroup.POINTED_DRIPSTONE),
            Map.entry("COPPER", BlockSoundGroup.COPPER),
            Map.entry("COPPER_BULB", BlockSoundGroup.COPPER_BULB),
            Map.entry("COPPER_GRATE", BlockSoundGroup.COPPER_GRATE),
            Map.entry("CAVE_VINES", BlockSoundGroup.CAVE_VINES),
            Map.entry("SPORE_BLOSSOM", BlockSoundGroup.SPORE_BLOSSOM),
            Map.entry("CACTUS_FLOWER", BlockSoundGroup.CACTUS_FLOWER),
            Map.entry("AZALEA", BlockSoundGroup.AZALEA),
            Map.entry("FLOWERING_AZALEA", BlockSoundGroup.FLOWERING_AZALEA),
            Map.entry("MOSS_CARPET", BlockSoundGroup.MOSS_CARPET),
            Map.entry("FLOWERBED", BlockSoundGroup.FLOWERBED),
            Map.entry("LEAF_LITTER", BlockSoundGroup.LEAF_LITTER),
            Map.entry("MOSS_BLOCK", BlockSoundGroup.MOSS_BLOCK),
            Map.entry("BIG_DRIPLEAF", BlockSoundGroup.BIG_DRIPLEAF),
            Map.entry("SMALL_DRIPLEAF", BlockSoundGroup.SMALL_DRIPLEAF),
            Map.entry("ROOTED_DIRT", BlockSoundGroup.ROOTED_DIRT),
            Map.entry("HANGING_ROOTS", BlockSoundGroup.HANGING_ROOTS),
            Map.entry("AZALEA_LEAVES", BlockSoundGroup.AZALEA_LEAVES),
            Map.entry("SCULK_SENSOR", BlockSoundGroup.SCULK_SENSOR),
            Map.entry("SCULK_CATALYST", BlockSoundGroup.SCULK_CATALYST),
            Map.entry("SCULK", BlockSoundGroup.SCULK),
            Map.entry("SCULK_VEIN", BlockSoundGroup.SCULK_VEIN),
            Map.entry("SCULK_SHRIEKER", BlockSoundGroup.SCULK_SHRIEKER),
            Map.entry("GLOW_LICHEN", BlockSoundGroup.GLOW_LICHEN),
            Map.entry("DEEPSLATE", BlockSoundGroup.DEEPSLATE),
            Map.entry("DEEPSLATE_BRICKS", BlockSoundGroup.DEEPSLATE_BRICKS),
            Map.entry("DEEPSLATE_TILES", BlockSoundGroup.DEEPSLATE_TILES),
            Map.entry("POLISHED_DEEPSLATE", BlockSoundGroup.POLISHED_DEEPSLATE),
            Map.entry("FROGLIGHT", BlockSoundGroup.FROGLIGHT),
            Map.entry("FROGSPAWN", BlockSoundGroup.FROGSPAWN),
            Map.entry("MANGROVE_ROOTS", BlockSoundGroup.MANGROVE_ROOTS),
            Map.entry("MUDDY_MANGROVE_ROOTS", BlockSoundGroup.MUDDY_MANGROVE_ROOTS),
            Map.entry("MUD", BlockSoundGroup.MUD),
            Map.entry("MUD_BRICKS", BlockSoundGroup.MUD_BRICKS),
            Map.entry("PACKED_MUD", BlockSoundGroup.PACKED_MUD),
            Map.entry("HANGING_SIGN", BlockSoundGroup.HANGING_SIGN),
            Map.entry("NETHER_WOOD_HANGING_SIGN", BlockSoundGroup.NETHER_WOOD_HANGING_SIGN),
            Map.entry("BAMBOO_WOOD_HANGING_SIGN", BlockSoundGroup.BAMBOO_WOOD_HANGING_SIGN),
            Map.entry("BAMBOO_WOOD", BlockSoundGroup.BAMBOO_WOOD),
            Map.entry("NETHER_WOOD", BlockSoundGroup.NETHER_WOOD),
            Map.entry("CHERRY_WOOD", BlockSoundGroup.CHERRY_WOOD),
            Map.entry("CHERRY_SAPLING", BlockSoundGroup.CHERRY_SAPLING),
            Map.entry("CHERRY_LEAVES", BlockSoundGroup.CHERRY_LEAVES),
            Map.entry("CHERRY_WOOD_HANGING_SIGN", BlockSoundGroup.CHERRY_WOOD_HANGING_SIGN),
            Map.entry("CHISELED_BOOKSHELF", BlockSoundGroup.CHISELED_BOOKSHELF),
            Map.entry("SUSPICIOUS_SAND", BlockSoundGroup.SUSPICIOUS_SAND),
            Map.entry("SUSPICIOUS_GRAVEL", BlockSoundGroup.SUSPICIOUS_GRAVEL),
            Map.entry("DECORATED_POT", BlockSoundGroup.DECORATED_POT),
            Map.entry("DECORATED_POT_SHATTER", BlockSoundGroup.DECORATED_POT_SHATTER),
            Map.entry("TRIAL_SPAWNER", BlockSoundGroup.TRIAL_SPAWNER),
            Map.entry("SPONGE", BlockSoundGroup.SPONGE),
            Map.entry("WET_SPONGE", BlockSoundGroup.WET_SPONGE),
            Map.entry("VAULT", BlockSoundGroup.VAULT),
            Map.entry("CREAKING_HEART", BlockSoundGroup.CREAKING_HEART),
            Map.entry("HEAVY_CORE", BlockSoundGroup.HEAVY_CORE),
            Map.entry("COBWEB", BlockSoundGroup.COBWEB),
            Map.entry("SPAWNER", BlockSoundGroup.SPAWNER),
            Map.entry("RESIN", BlockSoundGroup.RESIN),
            Map.entry("RESIN_BRICKS", BlockSoundGroup.RESIN_BRICKS),
            Map.entry("IRON", BlockSoundGroup.IRON)
    );
}
